name: publish

on:
  workflow_dispatch:

jobs:
  validate_git_tag:
    runs-on: ubuntu-latest
    env:
      IS_GIT_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - run: echo "${{ github.ref }}"
        if: ${{ env.IS_GIT_TAG == 'true' }}
      - run: exit 1
        if: ${{ env.IS_GIT_TAG == 'false' }}

  build_test_pack:
    runs-on: ubuntu-latest
    needs: validate_git_tag
    env:
      ARTIFACTS_FOLDER: ${{ github.workspace }}/artifacts
#       GITHUB_REF: ${{ github.workspace }}/artifacts
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - run: dotnet restore
#       - run: dotnet build -c Release --no-restore
#       - run: dotnet test -c Release --no-build --verbosity normal
      - run: dotnet pack -c Release -o $ARTIFACTS_FOLDER -p:Version=${GITHUB_REF_NAME#*refs/tags/}
      - run: echo "ARTIFACT_NAME=$(basename $(ls $ARTIFACTS_FOLDER/*.nupkg) .nupkg)" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}.zip
          path: ${{ env.ARTIFACTS_FOLDER }}/*nupkg
          if-no-files-found: error

  github_release:
    runs-on: ubuntu-latest
    needs: build_test_pack
    permissions:
      contents: write
    env:
      ARTIFACTS_FOLDER: ${{ github.workspace }}/artifacts
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: actions/download-artifact@v3
        with:
          path: ${{ env.ARTIFACTS_FOLDER }}
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .
      - run: echo "ARTIFACT_NAME=$(basename $(ls $ARTIFACTS_FOLDER/**/*.nupkg) .nupkg)" >> $GITHUB_ENV
      - run: |
          cd ${{ env.ARTIFACTS_FOLDER }}/${{ env.ARTIFACT_NAME }}.zip
          zip -r ${{ github.workspace }}/${{ env.ARTIFACT_NAME }}.zip ./*
          cd -
      - id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ env.ARTIFACT_NAME }}.zip
          artifactErrorsFailBuild: true
          artifactContentType: zip
          draft: true
          generateReleaseNotes: true
          makeLatest: true
  #           prerelease: ..regex

#   nuget_push:
#     runs-on: ubuntu-latest
#     needs: github_release
#     env:
#       ARTIFACTS_FOLDER: ${{ github.workspace }}/artifacts
#     steps:
#       - uses: actions/download-artifact@v3
#         with:
#           path: ${{ env.ARTIFACTS_FOLDER }}
#       - run: echo "ARTIFACT_NAME=$(basename $(ls $ARTIFACTS_FOLDER/**/*.nupkg) .nupkg)" >> $GITHUB_ENV
#       - run: dotnet nuget push ${{ env.ARTIFACTS_FOLDER }}/**/${{ env.ARTIFACT_NAME }}.nupkg --api-key "${{ secrets.NUGET_KEY }}" --source https://api.nuget.org/v3/index.json
#         if: ${{ success() }}
